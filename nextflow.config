includeConfig 'VERSION'

manifest {
    homePage = 'https://github.com/open2c/distiller-nf'
    mainScript = 'distiller.nf'
}

// docker-hub image is used both with docker and singularity
// replace with your local image when needed
// process.container = "open2c/distiller_env:${version}"
process.shell = ['/bin/bash', '-uexo','pipefail']


// Uncomment this to disable caching in work/ folder.
// process.cache = false


// Use 'params' to provide parameters
// accessible inside the main script
// distiller.nf
//
// parameters from the params section
// can be modified a command line arguments:
// nextflow run distiller --compression_format gz --config_dir /shared/path
params {
    // internal compression format (gz, lz4, ...)
    // used for storing intermediate results
    compression_format = 'gz'
    container_cache_dir = './'
    custom_config = 'custom.config'
    enable_conda = false
    publish_dir_mode = 'copy'


    tracedir = "pipeline_info"

    def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
    timeline {
        enabled = true
        file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
    }

    report {
        enabled = true
        file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
    }

    trace {
        enabled = true
        file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
    }

    dag {
        enabled = true
        file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
    }


    pairsgz_decompress_cmd = 'bgzip -cd -@ 3'

    switch(params.compression_format) {
        case 'gz':
            suffix = 'gz'
            decompress_cmd = 'bgzip -cd -@ 3'
        case 'lz4':
            suffix = 'lz4'
            decompress_cmd = 'lz4c -cd'            
        default:
            suffix = 'gz'
            decompress_cmd = 'bgzip -cd -@ 3'
    }
}


// docker or singularity context is
// described in the scope of profiles
profiles {

    standard {
        includeConfig "configs/local.config"
    }


    cluster {
        includeConfig "configs/cluster.config"
    }
    
    custom {
         includeConfig "${params.custom_config}" 
    }

}





